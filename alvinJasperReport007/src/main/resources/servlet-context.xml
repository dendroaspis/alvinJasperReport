<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:task="http://www.springframework.org/schema/task"
             xmlns:context="http://www.springframework.org/schema/context"
             xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">

    <!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->

    <!--&lt;!&ndash; Enables the Spring MVC @Controller programming model &ndash;&gt;-->
    <!--<annotation-driven conversion-service="conversionService" enableMatrixVariables="true">-->
    <!--<argument-resolvers>-->
    <!--<beans:bean class="org.springframework.samples.mvc.data.custom.CustomArgumentResolver"/>-->
    <!--</argument-resolvers>-->
    <!--<async-support default-timeout="3000">-->
    <!--<callable-interceptors>-->
    <!--<beans:bean class="org.springframework.samples.mvc.async.TimeoutCallableProcessingInterceptor" />-->
    <!--</callable-interceptors>-->
    <!--</async-support>-->
    <!--</annotation-driven>-->

    <!-- Enables the Spring MVC @Controller programming model -->
    <annotation-driven/>

    <!-- Imports user-defined @Controller beans that process client requests -->
    <!-- Maps '/' requests to the 'home' view -->
    <view-controller path="/" view-name="generate_report"/>

    <context:component-scan base-package="net.ensode.jasperbook.spring" />

    <!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources/ directory -->
    <resources mapping="/resources/**" location="/resources/"/>

    <!--混用viewResolver-->
    <beans:bean id="viewResolver1" class="org.springframework.web.servlet.view.ResourceBundleViewResolver">
        <beans:property name="basename" value="views"/>
        <beans:property name="order" value="1"/>
    </beans:bean>

    <!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
    <beans:bean id="viewResolver2" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <beans:property name="prefix" value="/WEB-INF/views/"/>
        <beans:property name="suffix" value=".jsp"/>
    </beans:bean>

    <!-- Only needed because we install custom converters to support the examples in the org.springframewok.samples.mvc.convert package -->
    <!--<beans:bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">-->
    <!--<beans:property name="formatters">-->
    <!--<beans:bean class="org.springframework.samples.mvc.convert.MaskFormatAnnotationFormatterFactory" />-->
    <!--</beans:property>-->
    <!--</beans:bean>-->

    <!-- Only needed because we require fileupload in the org.springframework.samples.mvc.fileupload package -->
    <!--<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver" />-->

    <!--<task:annotation-driven/>-->
</beans:beans>